FROM --platform=$BUILDPLATFORM docker.io/alpine/git:latest AS source
WORKDIR /go/src
ARG VERSION=main
RUN git clone --depth=1 --branch=${VERSION} https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/snowflake.git .

FROM --platform=$BUILDPLATFORM docker.io/library/golang:alpine AS build
ARG TARGETOS TARGETARCH
COPY --from=source /go/src /go/src
WORKDIR /go/src/proxy
RUN --mount=type=cache,target=/go/pkg go mod download
RUN --mount=type=cache,target=/go/pkg --mount=type=cache,target=/root/.cache/go-build CGO_ENABLED=0 GOOS=$TARGETOS GOARCH=$TARGETARCH go build -buildvcs=false -ldflags '-w -s -buildid=' -trimpath `if [[ "$TARGETARCH" != "arm" ]]; then echo "-buildmode=pie"; fi` .

FROM docker.io/library/alpine:latest
RUN apk -U upgrade --no-cache
RUN apk add ca-certificates tzdata --no-cache
COPY --from=build /go/src/proxy/proxy /bin/proxy
USER 1000
ENTRYPOINT [ "/bin/proxy" ]