FROM --platform=$BUILDPLATFORM docker.io/alpine/git:latest AS source
WORKDIR /go/src
ARG VERSION=main
RUN git clone --depth=1 --branch=${VERSION} https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/snowflake.git .

FROM --platform=$BUILDPLATFORM docker.io/library/golang:alpine AS build
ARG TARGETOS TARGETARCH
ENV GOOS="$TARGETOS" GOARCH="$TARGETARCH" GOFLAGS="-buildvcs=false -trimpath"
COPY --from=source /go/src /go/src
WORKDIR /go/src/proxy
RUN --mount=type=cache,target=/go/pkg go mod download
RUN --mount=type=cache,target=/go/pkg --mount=type=cache,target=/root/.cache/go-build go build -ldflags '-w -s -buildid=' .

FROM docker.io/library/alpine:latest
LABEL org.opencontainers.image.base.name="docker.io/library/alpine"
LABEL org.opencontainers.image.title="Snowflake Standalone"
LABEL org.opencontainers.image.description="Snowflake Standalone (Entry Point)"
RUN apk --no-cache --no-interactive add ca-certificates tzdata
COPY --from=build /go/src/proxy/proxy /bin/proxy
USER 1000
ENTRYPOINT [ "/bin/proxy" ]
